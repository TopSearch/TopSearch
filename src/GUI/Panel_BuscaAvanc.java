// PACOTE
package GUI;

// IMPORTA AS CLASSES
import Model.Funcoes;
import Model.Usuario;
import facebook4j.Facebook;
import facebook4j.FacebookException;
import java.awt.GridLayout;
import java.awt.Image;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import twitter4j.Twitter;
import twitter4j.User;

public class Panel_BuscaAvanc extends javax.swing.JPanel {

    // DECLARA AS VARIAVEIS
    private Twitter t;
    private User eu;
    private facebook4j.User uf;
    private Facebook f;
    private String palavra_chave;
    private Usuario usuarioLogado;
    private String lang = "", lingua_completa = "";
    Image foto;
    String urlfoto, urlfoto2;

    // CONSTRUTOR
    public Panel_BuscaAvanc(Twitter t, User eu, Facebook f, facebook4j.User uf, String palavra_chave, Usuario usuarioLogado) {
        this.t = t;
        this.eu = eu;
        this.uf = uf;
        this.f = f;
        this.palavra_chave = palavra_chave;
        this.usuarioLogado = usuarioLogado;
        initComponents();
        Inicia();
        criaLinguas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        edPalavraChave = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbLingua = new javax.swing.JComboBox();
        edData = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        btBuscaAvanc = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        edQtdePosts = new javax.swing.JFormattedTextField();

        setMaximumSize(new java.awt.Dimension(395, 617));

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        label1.setText("Busca Avançada");

        edPalavraChave.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                edPalavraChaveFocusLost(evt);
            }
        });
        edPalavraChave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edPalavraChaveKeyPressed(evt);
            }
        });

        jLabel1.setText("Palavra-chave:");

        jLabel2.setText("Idioma:");

        cbLingua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbLinguaKeyPressed(evt);
            }
        });

        try {
            edData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        edData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edDataKeyPressed(evt);
            }
        });

        jLabel3.setText("Desde o dia:");

        btBuscaAvanc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icone_buscaAvancada.png"))); // NOI18N
        btBuscaAvanc.setText("Buscar");
        btBuscaAvanc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscaAvancActionPerformed(evt);
            }
        });
        btBuscaAvanc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btBuscaAvancKeyPressed(evt);
            }
        });

        jLabel4.setText("Quantidade Posts:");

        edQtdePosts.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("######"))));
        edQtdePosts.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edQtdePostsKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btBuscaAvanc))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(edPalavraChave, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbLingua, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(edQtdePosts, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(edData, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(328, 328, 328)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(edPalavraChave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbLingua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edData, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edQtdePosts, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                .addComponent(btBuscaAvanc)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // BOTÃO BUSCA
    private void btBuscaAvancActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscaAvancActionPerformed
        this.removeAll();
        this.repaint();
        // CHAMA FUNÇÃO PARA OBTER A LINGUA
        obterLingua();
        // CRIA VARIAVEL DATE TEMPORARIA EM BRANCO
        String date_tmp = "";
        // SE A DATA FOR IGUAL 
        if (edData.getText().equals("  /  /    ")) {
            // DATA_TMP EM BRANCO
            date_tmp = "";
        } // SENAO, OBTEM A DATA DO CAMPO EDDATA
        else {
            date_tmp = edData.getText();
        }
        // CRIA PANEL DO TIPO PANEL_TBUSCA, PASSANDO OS PARÂMETROS (TWITTER, USER, PALAVRA-CHAVE USUARIO LOGADO, LINGUA, DATA, QTDE)
        JPanel panel = new Panel_TBusca(t, eu, edPalavraChave.getText(), usuarioLogado, lang, date_tmp, edQtdePosts.getText());

        // CRIA PANEL DO TIPO PANEL_FBUSCA, PASSANDO OS PARÂMETROS (facebook, USER, PALAVRA-CHAVE USUARIO LOGADO, LINGUA, DATA, QTDE)
        JPanel panel2 = null;
        try {
            panel2 = new Panel_FBusca(f, uf, edPalavraChave.getText(), usuarioLogado, lang, date_tmp, edQtdePosts.getText());
        } catch (FacebookException ex) {
            ex.printStackTrace();
        }

        // CRIA DUAS COLUNAS E UMA LINHA
        this.setLayout(new GridLayout(1, 2));
        // SETA UM A LOCALIZAÇÃO
        panel.setBounds(0, 0, 0, 0);
        panel2.setBounds(0, 0, 0, 0);
        // SETA UM TAMANHO
        panel.setSize(450, 700);
        panel2.setSize(450, 700);
        // SETA VISIBILIDADE
        panel.setVisible(true);
        panel2.setVisible(true);
        // ADICIONA NO PANEL PRINCIPAL
        this.add(panel);
        this.add(panel2);
        // RECARREGA INTERFACE
        this.repaint();
        this.setVisible(false);
        this.setVisible(true);
        this.repaint();

        // SETA VISIBILIDADE FALSE PARA OS CAMPOS
        btBuscaAvanc.setVisible(false);
        edData.setVisible(false);
        edPalavraChave.setVisible(false);
        edQtdePosts.setVisible(false);
        cbLingua.setVisible(false);
        jLabel1.setVisible(false);
        jLabel2.setVisible(false);
        jLabel3.setVisible(false);
        jLabel3.setVisible(false);
        jLabel4.setVisible(false);
        label1.setVisible(false);
    }//GEN-LAST:event_btBuscaAvancActionPerformed

    // FUNÇÃO OBTER LINGUA
    private void obterLingua() {
        // INSTANCIA OBJETO FUNCOES
        Funcoes f1 = new Funcoes();
        // PASSA O PARAMETRO DA BUSCA AVANCADA PARA A FUNÇÃO
        lang = f1.pegaSiglaLingua(cbLingua.getSelectedItem().toString());
    }

    // CAMPO PALAVRA-CHAVE    
    private void edPalavraChaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edPalavraChaveKeyPressed
        // AO PRESSIONAR ENTER
        if (evt.getKeyCode() == 10) {
            // SETA O FOCO PARA O CAMPO LINGUA
            cbLingua.requestFocus();
        }
    }//GEN-LAST:event_edPalavraChaveKeyPressed

    // CAMPO LINGUA
    private void cbLinguaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbLinguaKeyPressed
        // AO PRESSIONAR ENTER
        if (evt.getKeyCode() == 10) {
            // SETA O FOCO PARA O CAMPO DATA
            edData.requestFocus();
        }
    }//GEN-LAST:event_cbLinguaKeyPressed

    // CAMPO DATA
    private void edDataKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edDataKeyPressed
        // AO PRESSIONAR ENTER
        if (evt.getKeyCode() == 10) {
            // SETA O FOCO PARA O CAMPO QTDE
            edQtdePosts.requestFocus();
        }
    }//GEN-LAST:event_edDataKeyPressed

    // CAMPO QTDEPOSTS
    private void edQtdePostsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edQtdePostsKeyPressed
        // AO PRESSIONAR ENTER
        if (evt.getKeyCode() == 10) {
            // SETA O FOCO PARA O CAMPO BOTAO BUSCA
            btBuscaAvanc.requestFocus();
        }
    }//GEN-LAST:event_edQtdePostsKeyPressed

    // BOTÃO BUSCA
    private void btBuscaAvancKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btBuscaAvancKeyPressed
        // AO PRESSIONAR ENTER
        if (evt.getKeyCode() == 10) {
            // CHAMA FUNÇÃO PARA BUSCAR OU REFAZER A BUSCA
            btBuscaAvancActionPerformed(null);
        }
    }//GEN-LAST:event_btBuscaAvancKeyPressed

    // AO SAIR DO CAMPO PALAVRA CHAVE
    private void edPalavraChaveFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edPalavraChaveFocusLost
        // SE O CAMPO PALAVRA CHAVE FOR IGUAL A EM BRANCO
        if (edPalavraChave.getText().trim().equals("")) {
            // MOSTRA MENSAGEM E SETA O FOCO PARA A PALAVRA CHAVE
            JOptionPane.showMessageDialog(null, "Digite uma palavra-chave");
            edPalavraChave.requestFocus();
        }
    }//GEN-LAST:event_edPalavraChaveFocusLost

    // FUNÇÃO A QUAL INICIA A TELA PRINCIPAL
    private void Inicia() {
        // SETA NO LABEL PALAVRA CHAVE, A PALAVRA CHAVE BUSCADA 
        edPalavraChave.setText(palavra_chave);
    }

    // ALIMENTA COMBO BOX
    private void criaLinguas() {
        cbLingua.addItem(".Todos.");
        cbLingua.addItem("Português");
        cbLingua.addItem("Abecásia");
        cbLingua.addItem("Afar");
        cbLingua.addItem("Africânder");
        cbLingua.addItem("Aimará");
        cbLingua.addItem("Akan");
        cbLingua.addItem("Albanês");
        cbLingua.addItem("Alemão");
        cbLingua.addItem("Amárico");
        cbLingua.addItem("Árabe");
        cbLingua.addItem("Aragonês");
        cbLingua.addItem("Armênio");
        cbLingua.addItem("Assamês");
        cbLingua.addItem("Avárico");
        cbLingua.addItem("Avestan");
        cbLingua.addItem("Azerbaijano");
        cbLingua.addItem("Bâmbara");
        cbLingua.addItem("Basco");
        cbLingua.addItem("Baxequir");
        cbLingua.addItem("Bengali");
        cbLingua.addItem("Biari");
        cbLingua.addItem("Bielorusso");
        cbLingua.addItem("Birmanês");
        cbLingua.addItem("Bislamá");
        cbLingua.addItem("Bósnio");
        cbLingua.addItem("Bretão");
        cbLingua.addItem("Búlgaro");
        cbLingua.addItem("Cachemir");
        cbLingua.addItem("Canúri");
        cbLingua.addItem("Castelhano");
        cbLingua.addItem("Catalão");
        cbLingua.addItem("Cazaque");
        cbLingua.addItem("Chamorro");
        cbLingua.addItem("Chinês");
        cbLingua.addItem("ChiTsonga");
        cbLingua.addItem("Chona");
        cbLingua.addItem("Cinyanja");
        cbLingua.addItem("Coreano");
        cbLingua.addItem("Córnico");
        cbLingua.addItem("Corso");
        cbLingua.addItem("Cree");
        cbLingua.addItem("Criolo Haitiano");
        cbLingua.addItem("Croata");
        cbLingua.addItem("Cuanhama");
        cbLingua.addItem("Curdo");
        cbLingua.addItem("Dinamarquês");
        cbLingua.addItem("Divehi");
        cbLingua.addItem("Eslavo Eclesiástico");
        cbLingua.addItem("Eslovaco");
        cbLingua.addItem("Esloveno");
        cbLingua.addItem("Esperanto");
        cbLingua.addItem("Estoniano");
        cbLingua.addItem("Feroês");
        cbLingua.addItem("Fidijano");
        cbLingua.addItem("Finlandês");
        cbLingua.addItem("Francês");
        cbLingua.addItem("Frisão");
        cbLingua.addItem("Fula");
        cbLingua.addItem("Gaélico-Escocês");
        cbLingua.addItem("Galego");
        cbLingua.addItem("Galês");
        cbLingua.addItem("Ganda");
        cbLingua.addItem("Georgiano");
        cbLingua.addItem("Grego Moderno");
        cbLingua.addItem("Groenlandês");
        cbLingua.addItem("Guarani");
        cbLingua.addItem("Gujarati");
        cbLingua.addItem("Hauça");
        cbLingua.addItem("Hebraico");
        cbLingua.addItem("Hereró");
        cbLingua.addItem("Hindi");
        cbLingua.addItem("Hiri Motu");
        cbLingua.addItem("Holandês");
        cbLingua.addItem("Húngaro");
        cbLingua.addItem("Ibo");
        cbLingua.addItem("Ido");
        cbLingua.addItem("Indonésio");
        cbLingua.addItem("Inglês");
        cbLingua.addItem("Interlíngua");
        cbLingua.addItem("Interlíngue");
        cbLingua.addItem("Inuktitut");
        cbLingua.addItem("Inupiaq");
        cbLingua.addItem("Irlandés");
        cbLingua.addItem("Islandês");
        cbLingua.addItem("Italiano");
        cbLingua.addItem("Japonês");
        cbLingua.addItem("Javanês");
        cbLingua.addItem("Jeje");
        cbLingua.addItem("Kannada");
        cbLingua.addItem("Khmer");
        cbLingua.addItem("Kikuyu");
        cbLingua.addItem("Kinyaruanda");
        cbLingua.addItem("Komi");
        cbLingua.addItem("Laociano");
        cbLingua.addItem("Latim");
        cbLingua.addItem("Letão");
        cbLingua.addItem("Limburguês");
        cbLingua.addItem("Lingala");
        cbLingua.addItem("Lituano");
        cbLingua.addItem("Luba-Katanga");
        cbLingua.addItem("Luxemburguês");
        cbLingua.addItem("Macedônio");
        cbLingua.addItem("Malaiala");
        cbLingua.addItem("Malaio");
        cbLingua.addItem("Malgaxe");
        cbLingua.addItem("Maltês");
        cbLingua.addItem("Manês");
        cbLingua.addItem("Maori");
        cbLingua.addItem("Marata");
        cbLingua.addItem("Marshallês");
        cbLingua.addItem("Moldávio");
        cbLingua.addItem("Mongol");
        cbLingua.addItem("Nauru");
        cbLingua.addItem("Navajo");
        cbLingua.addItem("Ndebele do Norte");
        cbLingua.addItem("Ndebele do Sul");
        cbLingua.addItem("Ndonga");
        cbLingua.addItem("Nepali");
        cbLingua.addItem("Norueguês");
        cbLingua.addItem("Norueguês Bokmal");
        cbLingua.addItem("Novo Norueguês");
        cbLingua.addItem("Occitano");
        cbLingua.addItem("Ojibwa");
        cbLingua.addItem("Oriya");
        cbLingua.addItem("Oromo");
        cbLingua.addItem("Oseto");
        cbLingua.addItem("Páli");
        cbLingua.addItem("Pashto");
        cbLingua.addItem("Persa");
        cbLingua.addItem("Polonês");
        cbLingua.addItem("Punjabi");
        cbLingua.addItem("Quebec");
        cbLingua.addItem("Quechua");
        cbLingua.addItem("Quicongo");
        cbLingua.addItem("Quirguiz");
        cbLingua.addItem("Reto-Romano");
        cbLingua.addItem("Romeno");
        cbLingua.addItem("Rundi");
        cbLingua.addItem("Russo");
        cbLingua.addItem("Sami do Norte");
        cbLingua.addItem("Samoano");
        cbLingua.addItem("Sango");
        cbLingua.addItem("Sânscrito");
        cbLingua.addItem("Sardo");
        cbLingua.addItem("Sérvio");
        cbLingua.addItem("Servo-Croata");
        cbLingua.addItem("SeSotho do Sul");
        cbLingua.addItem("Sichuan");
        cbLingua.addItem("Sindi");
        cbLingua.addItem("Sinhalês");
        cbLingua.addItem("Somali");
        cbLingua.addItem("Sueco");
        cbLingua.addItem("Sundanês");
        cbLingua.addItem("Swahili");
        cbLingua.addItem("Swati");
        cbLingua.addItem("Tadjique");
        cbLingua.addItem("Tagalo");
        cbLingua.addItem("Tailandés");
        cbLingua.addItem("Taitiano");
        cbLingua.addItem("Tâmil");
        cbLingua.addItem("Tártaro");
        cbLingua.addItem("Tchecheno");
        cbLingua.addItem("Tcheco");
        cbLingua.addItem("Tchuvache");
        cbLingua.addItem("Telugu");
        cbLingua.addItem("Tibetano");
        cbLingua.addItem("Tigrinya");
        cbLingua.addItem("Tonganês");
        cbLingua.addItem("Tswana");
        cbLingua.addItem("Turco");
        cbLingua.addItem("Turcomano");
        cbLingua.addItem("Twi");
        cbLingua.addItem("Ucraniano");
        cbLingua.addItem("Uigure");
        cbLingua.addItem("Urdu");
        cbLingua.addItem("Uzbeque");
        cbLingua.addItem("Valão");
        cbLingua.addItem("Venda");
        cbLingua.addItem("Vetnamita");
        cbLingua.addItem("Volapuk");
        cbLingua.addItem("Wolof");
        cbLingua.addItem("Xhosa");
        cbLingua.addItem("Yiddish");
        cbLingua.addItem("Yoruba");
        cbLingua.addItem("Zhuang");
        cbLingua.addItem("Zoncá");
        cbLingua.addItem("Zulu");

        // SETA COMO NENHUM SELECIONADO 
        cbLingua.setSelectedIndex(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBuscaAvanc;
    private javax.swing.JComboBox cbLingua;
    private javax.swing.JFormattedTextField edData;
    private javax.swing.JTextField edPalavraChave;
    private javax.swing.JFormattedTextField edQtdePosts;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables
}
