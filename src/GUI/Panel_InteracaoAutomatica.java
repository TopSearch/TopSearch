// PACOTE
package GUI;

// IMPORTA AS CLASSES
import Beans.MensagemDAO;
import Model.Mensagem;
import Model.Usuario;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import javax.swing.InputMap;
import javax.swing.KeyStroke;

public class Panel_InteracaoAutomatica extends javax.swing.JPanel {

    // DECLARA AS VARIAVEIS 
    private Usuario usuarioLogado;

    // CONSTRUTOR
    public Panel_InteracaoAutomatica(Usuario usuarioLogado) {
        this.usuarioLogado = usuarioLogado;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btConfirma = new javax.swing.JButton();
        Cancelar = new javax.swing.JButton();
        label1 = new java.awt.Label();
        jPanel1 = new javax.swing.JPanel();
        rdAtivado = new javax.swing.JRadioButton();
        rdDesativado = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMsg1 = new javax.swing.JTextArea();
        lbContMsg1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMsg2 = new javax.swing.JTextArea();
        lbContMsg2 = new javax.swing.JLabel();
        limpaMsg1 = new javax.swing.JButton();
        limpaMsg2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtMsg3 = new javax.swing.JTextArea();
        limpaMsg3 = new javax.swing.JButton();
        lbContMsg3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtMsg4 = new javax.swing.JTextArea();
        limpaMsg4 = new javax.swing.JButton();
        lbContMsg4 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtMsg5 = new javax.swing.JTextArea();
        limpaMsg5 = new javax.swing.JButton();
        lbContMsg5 = new javax.swing.JLabel();
        lbNovoServico = new javax.swing.JLabel();

        buttonGroup1.add(rdAtivado);
        buttonGroup1.add(rdDesativado);

        btConfirma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icone_confirma.png"))); // NOI18N
        btConfirma.setText("  Confirma");
        btConfirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfirmaActionPerformed(evt);
            }
        });

        Cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icone_cancelar.png"))); // NOI18N
        Cancelar.setText("  Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        label1.setText("Interação Automática");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Serviço de Interação Automática"));
        jPanel1.setToolTipText("Status de serviço de interação automatica");

        rdAtivado.setText("Ativado");

        rdDesativado.setText("Desativado");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdAtivado)
                .addGap(18, 18, 18)
                .addComponent(rdDesativado)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {rdAtivado, rdDesativado});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdDesativado)
                    .addComponent(rdAtivado))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setToolTipText("Digite sua Mensagem");

        txtMsg1.setBackground(new java.awt.Color(212, 208, 200));
        txtMsg1.setColumns(40);
        txtMsg1.setLineWrap(true);
        txtMsg1.setRows(4);
        txtMsg1.setToolTipText("Digite sua mensagem");
        txtMsg1.setAutoscrolls(false);
        txtMsg1.setBorder(javax.swing.BorderFactory.createTitledBorder("Mensagem 1"));
        txtMsg1.setDisabledTextColor(new java.awt.Color(212, 208, 200));
        txtMsg1.setHighlighter(null);
        txtMsg1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtMsg1CaretUpdate(evt);
            }
        });
        txtMsg1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMsg1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtMsg1);

        lbContMsg1.setBackground(new java.awt.Color(255, 255, 255));
        lbContMsg1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbContMsg1.setText("140");
        lbContMsg1.setToolTipText("Caracteres restantes");
        lbContMsg1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setToolTipText("Digite sua Mensagem");

        txtMsg2.setBackground(new java.awt.Color(212, 208, 200));
        txtMsg2.setColumns(40);
        txtMsg2.setLineWrap(true);
        txtMsg2.setRows(4);
        txtMsg2.setToolTipText("Digite sua mensagem");
        txtMsg2.setAutoscrolls(false);
        txtMsg2.setBorder(javax.swing.BorderFactory.createTitledBorder("Mensagem 2"));
        txtMsg2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtMsg2CaretUpdate(evt);
            }
        });
        txtMsg2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMsg2KeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtMsg2);

        lbContMsg2.setBackground(new java.awt.Color(255, 255, 255));
        lbContMsg2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbContMsg2.setText("140");
        lbContMsg2.setToolTipText("Caracteres restantes");
        lbContMsg2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        limpaMsg1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icone_limpar.png"))); // NOI18N
        limpaMsg1.setToolTipText("Limpar mensagem 1");
        limpaMsg1.setBorder(null);
        limpaMsg1.setBorderPainted(false);
        limpaMsg1.setContentAreaFilled(false);
        limpaMsg1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpaMsg1ActionPerformed(evt);
            }
        });

        limpaMsg2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icone_limpar.png"))); // NOI18N
        limpaMsg2.setToolTipText("Limpar mensagem 1");
        limpaMsg2.setBorder(null);
        limpaMsg2.setBorderPainted(false);
        limpaMsg2.setContentAreaFilled(false);
        limpaMsg2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpaMsg2ActionPerformed(evt);
            }
        });

        jScrollPane3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setToolTipText("Digite sua Mensagem");

        txtMsg3.setBackground(new java.awt.Color(212, 208, 200));
        txtMsg3.setColumns(40);
        txtMsg3.setLineWrap(true);
        txtMsg3.setRows(4);
        txtMsg3.setToolTipText("Digite sua mensagem");
        txtMsg3.setAutoscrolls(false);
        txtMsg3.setBorder(javax.swing.BorderFactory.createTitledBorder("Mensagem 3"));
        txtMsg3.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtMsg3CaretUpdate(evt);
            }
        });
        txtMsg3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMsg3KeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(txtMsg3);

        limpaMsg3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icone_limpar.png"))); // NOI18N
        limpaMsg3.setToolTipText("Limpar mensagem 1");
        limpaMsg3.setBorder(null);
        limpaMsg3.setBorderPainted(false);
        limpaMsg3.setContentAreaFilled(false);
        limpaMsg3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpaMsg3ActionPerformed(evt);
            }
        });

        lbContMsg3.setBackground(new java.awt.Color(255, 255, 255));
        lbContMsg3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbContMsg3.setText("140");
        lbContMsg3.setToolTipText("Caracteres restantes");
        lbContMsg3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jScrollPane4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setToolTipText("Digite sua Mensagem");

        txtMsg4.setBackground(new java.awt.Color(212, 208, 200));
        txtMsg4.setColumns(40);
        txtMsg4.setLineWrap(true);
        txtMsg4.setRows(4);
        txtMsg4.setToolTipText("Digite sua mensagem");
        txtMsg4.setAutoscrolls(false);
        txtMsg4.setBorder(javax.swing.BorderFactory.createTitledBorder("Mensagem 4"));
        txtMsg4.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtMsg4CaretUpdate(evt);
            }
        });
        txtMsg4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMsg4KeyTyped(evt);
            }
        });
        jScrollPane4.setViewportView(txtMsg4);

        limpaMsg4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icone_limpar.png"))); // NOI18N
        limpaMsg4.setToolTipText("Limpar mensagem 1");
        limpaMsg4.setBorder(null);
        limpaMsg4.setBorderPainted(false);
        limpaMsg4.setContentAreaFilled(false);
        limpaMsg4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpaMsg4ActionPerformed(evt);
            }
        });

        lbContMsg4.setBackground(new java.awt.Color(255, 255, 255));
        lbContMsg4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbContMsg4.setText("140");
        lbContMsg4.setToolTipText("Caracteres restantes");
        lbContMsg4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jScrollPane5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setToolTipText("Digite sua Mensagem");

        txtMsg5.setBackground(new java.awt.Color(212, 208, 200));
        txtMsg5.setColumns(40);
        txtMsg5.setLineWrap(true);
        txtMsg5.setRows(4);
        txtMsg5.setToolTipText("Digite sua mensagem");
        txtMsg5.setAutoscrolls(false);
        txtMsg5.setBorder(javax.swing.BorderFactory.createTitledBorder("Mensagem 5"));
        txtMsg5.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtMsg5CaretUpdate(evt);
            }
        });
        txtMsg5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMsg5KeyTyped(evt);
            }
        });
        jScrollPane5.setViewportView(txtMsg5);

        limpaMsg5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icone_limpar.png"))); // NOI18N
        limpaMsg5.setToolTipText("Limpar mensagem 1");
        limpaMsg5.setBorder(null);
        limpaMsg5.setBorderPainted(false);
        limpaMsg5.setContentAreaFilled(false);
        limpaMsg5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpaMsg5ActionPerformed(evt);
            }
        });

        lbContMsg5.setBackground(new java.awt.Color(255, 255, 255));
        lbContMsg5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbContMsg5.setText("140");
        lbContMsg5.setToolTipText("Caracteres restantes");
        lbContMsg5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        lbNovoServico.setText("              ");
        lbNovoServico.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(limpaMsg5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbContMsg5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Cancelar)
                        .addGap(18, 18, 18)
                        .addComponent(btConfirma))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(limpaMsg3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbContMsg3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(limpaMsg1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbContMsg1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(limpaMsg2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lbContMsg2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(limpaMsg4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lbContMsg4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 77, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lbNovoServico, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(label1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lbContMsg1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(limpaMsg1)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(limpaMsg2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lbContMsg2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lbNovoServico))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbContMsg3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(limpaMsg3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lbContMsg4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(limpaMsg4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbContMsg5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(limpaMsg5)
                    .addComponent(Cancelar)
                    .addComponent(btConfirma, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        label1.getAccessibleContext().setAccessibleDescription("");
    }// </editor-fold>//GEN-END:initComponents
    // AO MODIFICAR O TEXTO DA MSG1
    private void txtMsg1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtMsg1CaretUpdate
        // ATUALIZA O CONTADOR DE CARACTERES
        lbContMsg1.setText(String.valueOf(140 - txtMsg1.getText().length()));
        // BLOQUEIA O CONTROL+C E CONTROL+V NO TEXTAREA
        InputMap map = txtMsg1.getInputMap();
        map.put(KeyStroke.getKeyStroke('V', InputEvent.CTRL_DOWN_MASK), "beep");
        map.put(KeyStroke.getKeyStroke('C', InputEvent.CTRL_DOWN_MASK), "beep");
    }//GEN-LAST:event_txtMsg1CaretUpdate

    // QUANDO PRESSIONAR QUALQUER TECLA NA MSG1
    private void txtMsg1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMsg1KeyTyped
        // SE A QUANTIDADE DE CARACTERES DA MSG1 FOR MAIOR OU IGUAL A 140 CARACTERES
        if (txtMsg1.getText().length() >= 140) {
            // LIMPA A ULTIMA TECLA DIGITADA
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
        }
    }//GEN-LAST:event_txtMsg1KeyTyped

    // AO MODIFICAR O TEXTO DA MSG2
    private void txtMsg2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtMsg2CaretUpdate
        // ATUALIZA O CONTADOR DE CARACTERES
        lbContMsg2.setText(String.valueOf(140 - txtMsg2.getText().length()));
        // BLOQUEIA O CONTROL+C E CONTROL+V NO TEXTAREA
        InputMap map = txtMsg2.getInputMap();
        map.put(KeyStroke.getKeyStroke('V', InputEvent.CTRL_DOWN_MASK), "beep");
        map.put(KeyStroke.getKeyStroke('C', InputEvent.CTRL_DOWN_MASK), "beep");
    }//GEN-LAST:event_txtMsg2CaretUpdate

    // QUANDO PRESSIONAR QUALQUER TECLA NA MSG2
    private void txtMsg2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMsg2KeyTyped
        // SE A QUANTIDADE DE CARACTERES DA MSG1 FOR MAIOR OU IGUAL A 140 CARACTERES
        if (txtMsg2.getText().length() >= 140) {
            // LIMPA A ULTIMA TECLA DIGITADA
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
        }
    }//GEN-LAST:event_txtMsg2KeyTyped

    // LIMPA CONTEUDO DA MSG1
    private void limpaMsg1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpaMsg1ActionPerformed
        txtMsg1.setText("");
    }//GEN-LAST:event_limpaMsg1ActionPerformed

    // LIMPA CONTEUDO DA MSG2
    private void limpaMsg2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpaMsg2ActionPerformed
        txtMsg2.setText("");
    }//GEN-LAST:event_limpaMsg2ActionPerformed

    // AO MODIFICAR O TEXTO DA MSG3
    private void txtMsg3CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtMsg3CaretUpdate
        // ATUALIZA O CONTADOR DE CARACTERES
        lbContMsg3.setText(String.valueOf(140 - txtMsg3.getText().length()));
        // BLOQUEIA O CONTROL+C E CONTROL+V NO TEXTAREA
        InputMap map = txtMsg3.getInputMap();
        map.put(KeyStroke.getKeyStroke('V', InputEvent.CTRL_DOWN_MASK), "beep");
        map.put(KeyStroke.getKeyStroke('C', InputEvent.CTRL_DOWN_MASK), "beep");
    }//GEN-LAST:event_txtMsg3CaretUpdate
    // QUANDO PRESSIONAR QUALQUER TECLA NA MSG3
    private void txtMsg3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMsg3KeyTyped
        // SE A QUANTIDADE DE CARACTERES DA MSG1 FOR MAIOR OU IGUAL A 140 CARACTERES
        if (txtMsg3.getText().length() >= 140) {
            // LIMPA A ULTIMA TECLA DIGITADA
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
        }
    }//GEN-LAST:event_txtMsg3KeyTyped

    // LIMPA CONTEUDO DA MSG3
    private void limpaMsg3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpaMsg3ActionPerformed
        txtMsg3.setText("");
    }//GEN-LAST:event_limpaMsg3ActionPerformed

    // AO MODIFICAR O TEXTO DA MSG4
    private void txtMsg4CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtMsg4CaretUpdate
        // ATUALIZA O CONTADOR DE CARACTERES
        lbContMsg4.setText(String.valueOf(140 - txtMsg4.getText().length()));
        // BLOQUEIA O CONTROL+C E CONTROL+V NO TEXTAREA
        InputMap map = txtMsg4.getInputMap();
        map.put(KeyStroke.getKeyStroke('V', InputEvent.CTRL_DOWN_MASK), "beep");
        map.put(KeyStroke.getKeyStroke('C', InputEvent.CTRL_DOWN_MASK), "beep");
    }//GEN-LAST:event_txtMsg4CaretUpdate

    // QUANDO PRESSIONAR QUALQUER TECLA NA MSG4
    private void txtMsg4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMsg4KeyTyped
        // SE A QUANTIDADE DE CARACTERES DA MSG1 FOR MAIOR OU IGUAL A 140 CARACTERES
        if (txtMsg4.getText().length() >= 140) {
            // LIMPA A ULTIMA TECLA DIGITADA
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
        }
    }//GEN-LAST:event_txtMsg4KeyTyped

    // LIMPA CONTEUDO DA MSG4
    private void limpaMsg4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpaMsg4ActionPerformed
        txtMsg4.setText("");
    }//GEN-LAST:event_limpaMsg4ActionPerformed

    // AO MODIFICAR O TEXTO DA MSG5
    private void txtMsg5CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtMsg5CaretUpdate
        // ATUALIZA O CONTADOR DE CARACTERES
        lbContMsg5.setText(String.valueOf(140 - txtMsg5.getText().length()));
        // BLOQUEIA O CONTROL+C E CONTROL+V NO TEXTAREA
        InputMap map = txtMsg4.getInputMap();
        map.put(KeyStroke.getKeyStroke('V', InputEvent.CTRL_DOWN_MASK), "beep");
        map.put(KeyStroke.getKeyStroke('C', InputEvent.CTRL_DOWN_MASK), "beep");
    }//GEN-LAST:event_txtMsg5CaretUpdate

    // QUANDO PRESSIONAR QUALQUER TECLA NA MSG5
    private void txtMsg5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMsg5KeyTyped
        // SE A QUANTIDADE DE CARACTERES DA MSG1 FOR MAIOR OU IGUAL A 140 CARACTERES
        if (txtMsg5.getText().length() >= 140) {
            // LIMPA A ULTIMA TECLA DIGITADA
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
        }
    }//GEN-LAST:event_txtMsg5KeyTyped

    // LIMPA CONTEUDO DA MSG5
    private void limpaMsg5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpaMsg5ActionPerformed
        txtMsg5.setText("");
    }//GEN-LAST:event_limpaMsg5ActionPerformed

    // BOTÃO CANCELAR
    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        // REMOVE O TODO O CONTEUDO DO PANEL PRINCIPAL
        this.removeAll();
        // JOGA O PANEL COMO INVISIVEL
        this.setVisible(false);
    }//GEN-LAST:event_CancelarActionPerformed

    // BOTÃO CONFIRMA
    private void btConfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfirmaActionPerformed
        // SE O SERVIÇO FOR INEXISTENTE
        if (lbNovoServico.getText().equals("Serviço Inexistente")) {
            // INSTANCIA UM OBJETO DO TIPO MENSAGEM
            Mensagem mensagemNovo = new Mensagem();
            // INSTANCIA UM OBJETO DO TIPO MENSAGEM DAO
            MensagemDAO mensagemDao = new MensagemDAO();
            // SETA AS CINCO MENSAGENS
            mensagemNovo.setMensagem1(txtMsg1.getText());
            mensagemNovo.setMensagem2(txtMsg2.getText());
            mensagemNovo.setMensagem3(txtMsg3.getText());
            mensagemNovo.setMensagem4(txtMsg4.getText());
            mensagemNovo.setMensagem5(txtMsg5.getText());

            // VERIFICA SE O ATIVO ESTÁ ATIVO OU NÃO
            if (rdAtivado.isSelected()) {
                // SETA NO OBJETO O STATUS 'S'
                mensagemNovo.setStatus("S");
            } // SENÃO O STATUS 'N'
            else {
                mensagemNovo.setStatus("N");
            }
            // SETA O ID DO USUARIO LOGADO
            mensagemNovo.setIdUsuario(usuarioLogado.getId());
            try {
                // INSERIR NO BANCO AS MENSAGENS
                mensagemDao.insereMensagens(mensagemNovo);
                // MUDA O TEXTO DO LABEL NOVOSERVICO
                lbNovoServico.setText("Serviço Existente");
            } catch (Exception e) {
                // EM CASO DE ERRO, EXIBE
                e.printStackTrace();
            }
        }
        // SE O USUARIO JÁ POSSUI MENSAGENS
        if (lbNovoServico.getText().equals("Serviço Existente")) {
            // INSTANCIA UM OBJETO DO TIPO MENSAGEM
            Mensagem mensagemEditar = new Mensagem();
            // INSTANCIA UM OBJETO DO TIPO MENSAGEM DAO
            MensagemDAO mensagemDao = new MensagemDAO();
            // SETA AS CINCO MENSAGENS
            mensagemEditar.setMensagem1(txtMsg1.getText());
            mensagemEditar.setMensagem2(txtMsg2.getText());
            mensagemEditar.setMensagem3(txtMsg3.getText());
            mensagemEditar.setMensagem4(txtMsg4.getText());
            mensagemEditar.setMensagem5(txtMsg5.getText());

            // VERIFICA SE O ATIVO ESTÁ ATIVO OU NÃO
            if (rdAtivado.isSelected()) {
                // SETA NO OBJETO O STATUS 'S'
                mensagemEditar.setStatus("S");
            } // SENÃO O STATUS 'N'
            else {
                mensagemEditar.setStatus("N");
            }
            // SETA O ID DO USUARIO LOGADO
            mensagemEditar.setIdUsuario(usuarioLogado.getId());
            try {
                // ATUALIZA NO BANCO AS MENSAGENS
                mensagemDao.atualizaMensagens(mensagemEditar);
                // MUDA O TEXTO DO LABEL NOVOSERVICO
                lbNovoServico.setText("Serviço Existente");
            } // EM CASO DE ERRO, EXIBE
            catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btConfirmaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancelar;
    private javax.swing.JButton btConfirma;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    public java.awt.Label label1;
    private javax.swing.JLabel lbContMsg1;
    private javax.swing.JLabel lbContMsg2;
    private javax.swing.JLabel lbContMsg3;
    private javax.swing.JLabel lbContMsg4;
    private javax.swing.JLabel lbContMsg5;
    public javax.swing.JLabel lbNovoServico;
    private javax.swing.JButton limpaMsg1;
    private javax.swing.JButton limpaMsg2;
    private javax.swing.JButton limpaMsg3;
    private javax.swing.JButton limpaMsg4;
    private javax.swing.JButton limpaMsg5;
    public javax.swing.JRadioButton rdAtivado;
    public javax.swing.JRadioButton rdDesativado;
    public javax.swing.JTextArea txtMsg1;
    public javax.swing.JTextArea txtMsg2;
    public javax.swing.JTextArea txtMsg3;
    public javax.swing.JTextArea txtMsg4;
    public javax.swing.JTextArea txtMsg5;
    // End of variables declaration//GEN-END:variables
}
